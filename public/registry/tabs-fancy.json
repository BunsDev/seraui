{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tabs-fancy",
  "title": "Tabs Fancy",
  "description": "A minimalistic tabs fancy component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "tabs-fancy.tsx",
      "content": "'use client';\r\nimport { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nexport default function TabsViewFancy() {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Simulate loading effect when changing tabs\r\n  useEffect(() => {\r\n    if (activeTab) {\r\n      setIsLoading(true);\r\n      const timer = setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [activeTab]);\r\n\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      name: 'Photos',\r\n      icon: 'ðŸ“¸',\r\n      type: 'content',\r\n      content:\r\n        'This is the PHOTOS tab content. Here you would display your photo gallery or image collection.',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Music',\r\n      icon: 'ðŸŽµ',\r\n      type: 'content',\r\n      content:\r\n        'This is the MUSIC tab content. Here you would display your music player or audio tracks.',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Videos',\r\n      icon: 'ðŸŽ¬',\r\n      type: 'content',\r\n      content:\r\n        'This is the VIDEOS tab content. Here you would display your video player or video collection.',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className='w-full max-w-2xl mx-auto'>\r\n      {/* Tabs Container - Vertical design for larger screens, horizontal for mobile */}\r\n      <div className='flex flex-col sm:flex-row gap-6 rounded-xl overflow-hidden'>\r\n        {/* Sidebar navigation */}\r\n        <div className='sm:w-56 flex sm:flex-col rounded-xl bg-black/5 dark:bg-white/5 backdrop-filter backdrop-blur-lg'>\r\n          {tabs.map((tab) => (\r\n            <button\r\n              key={tab.id}\r\n              onClick={() => setActiveTab(tab.id)}\r\n              className={`\r\n                relative group flex items-center w-full px-4 py-3 sm:py-4 transition-all\r\n                ${\r\n                  activeTab === tab.id\r\n                    ? 'text-white dark:text-white'\r\n                    : 'text-gray-500 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300'\r\n                }\r\n              `}\r\n            >\r\n              {/* Background highlight for active tab */}\r\n              {activeTab === tab.id && (\r\n                <motion.div\r\n                  layoutId='tabBackground'\r\n                  className='absolute inset-0 bg-gradient-to-r from-indigo-600 to-purple-600 rounded-lg'\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ duration: 0.2 }}\r\n                />\r\n              )}\r\n\r\n              {/* Tab content with icon and text */}\r\n              <div className='flex items-center gap-3 z-10'>\r\n                <span className='text-xl'>{tab.icon}</span>\r\n                <span className='font-medium'>{tab.name}</span>\r\n              </div>\r\n\r\n              {/* Small dot indicator */}\r\n              {activeTab === tab.id ? (\r\n                <motion.div\r\n                  layoutId='activeDot'\r\n                  className='absolute right-3 w-2 h-2 rounded-full bg-white'\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ delay: 0.1 }}\r\n                />\r\n              ) : (\r\n                <div className='absolute right-3 w-2 h-2 rounded-full bg-gray-400/0 group-hover:bg-gray-400/30 transition-colors' />\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Content area */}\r\n        <div className='flex-1 relative rounded-xl bg-white/80 dark:bg-gray-900/80 backdrop-filter backdrop-blur-lg shadow-lg overflow-hidden'>\r\n          {/* Loading overlay */}\r\n          <AnimatePresence>\r\n            {isLoading && (\r\n              <motion.div\r\n                key='loader'\r\n                className='absolute inset-0 z-20 flex items-center justify-center bg-white/90 dark:bg-gray-900/90 backdrop-blur-sm'\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 0.7 }}\r\n                exit={{ opacity: 0 }}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <svg\r\n                  className='animate-spin h-8 w-8 text-indigo-600'\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  fill='none'\r\n                  viewBox='0 0 24 24'\r\n                >\r\n                  <circle\r\n                    className='opacity-25'\r\n                    cx='12'\r\n                    cy='12'\r\n                    r='10'\r\n                    stroke='currentColor'\r\n                    strokeWidth='4'\r\n                  ></circle>\r\n                  <path\r\n                    className='opacity-75'\r\n                    fill='currentColor'\r\n                    d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\r\n                  ></path>\r\n                </svg>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n\r\n          {/* Tab content with animations */}\r\n          <AnimatePresence mode='wait'>\r\n            <motion.div\r\n              key={activeTab}\r\n              initial={{ opacity: 0, x: 10 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              exit={{ opacity: 0, x: -10 }}\r\n              transition={{ duration: 0.3 }}\r\n              className='p-6 h-64 overflow-y-auto'\r\n            >\r\n              <h3 className='text-lg font-semibold flex items-center gap-2 mb-4 text-gray-900 dark:text-white'>\r\n                <span>{tabs.find((t) => t.id === activeTab)?.icon}</span>\r\n                <span>{tabs.find((t) => t.id === activeTab)?.name}</span>\r\n              </h3>\r\n              <div className='prose dark:prose-invert'>\r\n                {tabs.find((tab) => tab.id === activeTab)?.content ||\r\n                  tabs[0].content}\r\n              </div>\r\n            </motion.div>\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "tabs-view-fancy.tsx",
      "content": "'use client';\r\nimport { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nexport default function TabsViewFancy() {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Simulate loading effect when changing tabs\r\n  useEffect(() => {\r\n    if (activeTab) {\r\n      setIsLoading(true);\r\n      const timer = setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 400);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [activeTab]);\r\n\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      name: 'Photos',\r\n      icon: 'ðŸ“¸',\r\n      type: 'content',\r\n      content:\r\n        'This is the PHOTOS tab content. Here you would display your photo gallery or image collection.',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Music',\r\n      icon: 'ðŸŽµ',\r\n      type: 'content',\r\n      content:\r\n        'This is the MUSIC tab content. Here you would display your music player or audio tracks.',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Videos',\r\n      icon: 'ðŸŽ¬',\r\n      type: 'content',\r\n      content:\r\n        'This is the VIDEOS tab content. Here you would display your video player or video collection.',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className='w-full max-w-2xl mx-auto'>\r\n      {/* Tabs Container - Vertical design for larger screens, horizontal for mobile */}\r\n      <div className='flex flex-col sm:flex-row gap-6 rounded-xl overflow-hidden'>\r\n        {/* Sidebar navigation */}\r\n        <div className='sm:w-56 flex sm:flex-col rounded-xl bg-black/5 dark:bg-white/5 backdrop-filter backdrop-blur-lg'>\r\n          {tabs.map((tab) => (\r\n            <button\r\n              key={tab.id}\r\n              onClick={() => setActiveTab(tab.id)}\r\n              className={`\r\n                relative group flex items-center w-full px-4 py-3 sm:py-4 transition-all\r\n                ${\r\n                  activeTab === tab.id\r\n                    ? 'text-white dark:text-white'\r\n                    : 'text-gray-500 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300'\r\n                }\r\n              `}\r\n            >\r\n              {/* Background highlight for active tab */}\r\n              {activeTab === tab.id && (\r\n                <motion.div\r\n                  layoutId='tabBackground'\r\n                  className='absolute inset-0 bg-gradient-to-r from-indigo-600 to-purple-600 rounded-lg'\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ duration: 0.2 }}\r\n                />\r\n              )}\r\n\r\n              {/* Tab content with icon and text */}\r\n              <div className='flex items-center gap-3 z-10'>\r\n                <span className='text-xl'>{tab.icon}</span>\r\n                <span className='font-medium'>{tab.name}</span>\r\n              </div>\r\n\r\n              {/* Small dot indicator */}\r\n              {activeTab === tab.id ? (\r\n                <motion.div\r\n                  layoutId='activeDot'\r\n                  className='absolute right-3 w-2 h-2 rounded-full bg-white'\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ delay: 0.1 }}\r\n                />\r\n              ) : (\r\n                <div className='absolute right-3 w-2 h-2 rounded-full bg-gray-400/0 group-hover:bg-gray-400/30 transition-colors' />\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Content area */}\r\n        <div className='flex-1 relative rounded-xl bg-white/80 dark:bg-gray-900/80 backdrop-filter backdrop-blur-lg shadow-lg overflow-hidden'>\r\n          {/* Loading overlay */}\r\n          <AnimatePresence>\r\n            {isLoading && (\r\n              <motion.div\r\n                key='loader'\r\n                className='absolute inset-0 z-20 flex items-center justify-center bg-white/90 dark:bg-gray-900/90 backdrop-blur-sm'\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 0.7 }}\r\n                exit={{ opacity: 0 }}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <svg\r\n                  className='animate-spin h-8 w-8 text-indigo-600'\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  fill='none'\r\n                  viewBox='0 0 24 24'\r\n                >\r\n                  <circle\r\n                    className='opacity-25'\r\n                    cx='12'\r\n                    cy='12'\r\n                    r='10'\r\n                    stroke='currentColor'\r\n                    strokeWidth='4'\r\n                  ></circle>\r\n                  <path\r\n                    className='opacity-75'\r\n                    fill='currentColor'\r\n                    d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\r\n                  ></path>\r\n                </svg>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n\r\n          {/* Tab content with animations */}\r\n          <AnimatePresence mode='wait'>\r\n            <motion.div\r\n              key={activeTab}\r\n              initial={{ opacity: 0, x: 10 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              exit={{ opacity: 0, x: -10 }}\r\n              transition={{ duration: 0.3 }}\r\n              className='p-6 h-64 overflow-y-auto'\r\n            >\r\n              <h3 className='text-lg font-semibold flex items-center gap-2 mb-4 text-gray-900 dark:text-white'>\r\n                <span>{tabs.find((t) => t.id === activeTab)?.icon}</span>\r\n                <span>{tabs.find((t) => t.id === activeTab)?.name}</span>\r\n              </h3>\r\n              <div className='prose dark:prose-invert'>\r\n                {tabs.find((tab) => tab.id === activeTab)?.content ||\r\n                  tabs[0].content}\r\n              </div>\r\n            </motion.div>\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}