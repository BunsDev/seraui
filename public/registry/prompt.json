{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "prompt",
  "title": "Prompt",
  "description": "A minimalistic prompt component designed with React and Tailwind CSS.",
  "author": "Nazmul Hossain",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "prompt.tsx",
      "content": "\"use client\"\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\n// Icons for the component\r\nimport { Plus, ChevronDown, Mic, ArrowUp, Image as ImageIcon, Box, FileText, Brain } from 'lucide-react';\r\n\r\nconst PromptComponent = () => {\r\n  const [prompt, setPrompt] = useState('');\r\n\r\n  // State to manage the visibility of popups and dropdowns\r\n  const [isAddPopupOpen, setAddPopupOpen] = useState(false);\r\n  const [isModelOpen, setModelOpen] = useState(false);\r\n\r\n  // State for the selected model\r\n  const [selectedModel, setSelectedModel] = useState('Brainwave 2.5');\r\n  const models = ['Brainwave 2.5', 'Creative Fusion', 'Visionary AI 3.0'];\r\n\r\n  // Refs for the popups to detect outside clicks\r\n  const addPopupRef = useRef<HTMLDivElement>(null);\r\n  const modelRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // Effect to handle clicks outside of the popups/dropdowns\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (addPopupRef.current && !addPopupRef.current.contains(event.target as Node)) {\r\n        setAddPopupOpen(false);\r\n      }\r\n      if (modelRef.current && !modelRef.current.contains(event.target as Node)) {\r\n        setModelOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleModelSelect = (model: string) => {\r\n    setSelectedModel(model);\r\n    setModelOpen(false);\r\n  };\r\n  \r\n  const handleUpload = () => {\r\n    if(!prompt.trim()) {\r\n        // Using console.error instead of alert\r\n        console.error(\"Please describe your 3D object or scene first!\");\r\n        return;\r\n    }\r\n    console.log(`Uploading prompt: \"${prompt}\" with model: ${selectedModel}`);\r\n    // Add your upload logic here\r\n  }\r\n\r\n  const addMenuItems = [\r\n    { icon: <ImageIcon size={20} className=\"text-gray-500 dark:text-gray-400\" />, text: \"Add photos or videos\" },\r\n    { icon: <Box size={20} className=\"text-gray-500 dark:text-gray-400\" />, text: \"Add 3D objects\" },\r\n    { icon: <FileText size={20} className=\"text-gray-500 dark:text-gray-400\" />, text: \"Add files (docs, txt...)\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"w-full max-w-2xl p-4\">\r\n      <div className=\"bg-white/80 backdrop-blur-xl dark:bg-black/90 rounded-3xl shadow-2xl border border-gray-200/50 dark:border-gray-800/50 p-6 transition-all duration-300 hover:shadow-3xl\">\r\n        <textarea\r\n          className=\"w-full p-3 bg-transparent text-gray-800 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none resize-none text-base font-medium leading-relaxed\"\r\n          rows={2}\r\n          placeholder=\"Describe your 3D object or scene...\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n        />\r\n        {/* Responsive container for controls */}\r\n        <div className=\"flex flex-col md:flex-row items-center justify-between mt-4 gap-4 md:gap-0\">\r\n          {/* Left side controls */}\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            {/* Add Button and Popup */}\r\n            <div className=\"relative\" ref={addPopupRef}>\r\n              <button \r\n                onClick={() => setAddPopupOpen(!isAddPopupOpen)}\r\n                className=\"flex items-center justify-center w-12 h-12 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 hover:from-gray-100 hover:to-gray-200 dark:hover:from-gray-800 dark:hover:to-gray-700 text-gray-600 dark:text-gray-300 rounded-2xl transition-all duration-200 shadow-lg hover:shadow-xl border border-gray-200/50 dark:border-gray-700/50\"\r\n              >\r\n                <Plus size={22} />\r\n              </button>\r\n              {isAddPopupOpen && (\r\n                <div className=\"absolute bottom-full left-0 mb-3 w-72 bg-white/95 backdrop-blur-xl dark:bg-gray-900/95 rounded-2xl shadow-2xl border border-gray-200/50 dark:border-gray-700/50 z-10\">\r\n                  <ul>\r\n                    {addMenuItems.map((item, index) => (\r\n                       <li key={index} className=\"flex items-center gap-4 p-4 hover:bg-gray-50/80 dark:hover:bg-gray-800/80 cursor-pointer rounded-xl transition-colors duration-200 first:rounded-t-2xl last:rounded-b-2xl\">\r\n                         {item.icon}\r\n                         <span className=\"font-medium text-gray-700 dark:text-gray-200\">{item.text}</span>\r\n                       </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Model Selection Button and Dropdown */}\r\n            <div className=\"relative\" ref={modelRef}>\r\n              <button onClick={() => setModelOpen(!isModelOpen)} className=\"flex items-center justify-center h-12 px-4 lg:px-5 bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-900/30 dark:to-indigo-800/30 hover:from-blue-100 hover:to-indigo-200 dark:hover:from-blue-800/40 dark:hover:to-indigo-700/40 text-gray-800 dark:text-gray-200 rounded-2xl transition-all duration-200 shadow-lg hover:shadow-xl border border-blue-200/50 dark:border-blue-700/30\">\r\n                <Brain size={18} className=\"text-blue-600 dark:text-blue-400\" />\r\n                <span className=\"font-semibold ml-2 hidden lg:block\">{selectedModel}</span>\r\n                <ChevronDown size={16} className=\"ml-2 hidden lg:block\" />\r\n              </button>\r\n               {isModelOpen && (\r\n                 <div className=\"absolute bottom-full left-0 mb-3 w-64 bg-white/95 backdrop-blur-xl dark:bg-gray-900/95 rounded-2xl shadow-2xl border border-gray-200/50 dark:border-gray-700/50 z-10\">\r\n                  <ul>\r\n                    {models.map((model) => (\r\n                       <li key={model} onClick={() => handleModelSelect(model)} className=\"p-4 hover:bg-gray-50/80 dark:hover:bg-gray-800/80 cursor-pointer font-medium text-gray-700 dark:text-gray-200 rounded-xl transition-colors duration-200 first:rounded-t-2xl last:rounded-b-2xl\">\r\n                         {model}\r\n                       </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Right side controls */}\r\n          <div className=\"flex items-center gap-3\">\r\n            <button onClick={() => console.log(\"Mic clicked\")} className=\"flex items-center justify-center w-12 h-12 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 hover:from-gray-100 hover:to-gray-200 dark:hover:from-gray-800 dark:hover:to-gray-700 text-gray-600 dark:text-gray-300 rounded-full transition-all duration-200 shadow-lg hover:shadow-xl border border-gray-200/50 dark:border-gray-700/50\">\r\n                <Mic size={22} />\r\n            </button>\r\n            <button onClick={handleUpload} className={`flex items-center justify-center w-12 h-12 rounded-2xl transition-all duration-200 shadow-lg hover:shadow-xl ${\r\n              prompt.trim() \r\n                ? 'bg-gradient-to-br from-gray-800 to-gray-900 hover:from-gray-900 hover:to-black dark:from-blue-600 dark:to-blue-700 dark:hover:from-blue-500 dark:hover:to-blue-600 text-white' \r\n                : 'bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-800 dark:to-gray-700 text-gray-400 dark:text-gray-500 cursor-not-allowed'\r\n            }`}>\r\n              <ArrowUp size={22} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromptComponent;",
      "type": "registry:ui"
    }
  ]
}
