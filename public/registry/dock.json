{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dock",
  "title": "Dock",
  "description": "A minimalistic dock component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "dock.tsx",
      "content": "\"use client\";\n\nimport React, { useRef } from 'react';\nimport {\n  motion,\n  useMotionValue,\n  useSpring,\n  useTransform,\n  MotionValue\n} from \"framer-motion\";\n\n\n// --- SVG Icon Components ---\n// No changes were made to the icon components. They are included for completeness.\nconst HomeIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" /><polyline points=\"9 22 9 12 15 12 15 22\" /></svg>\n);\nconst EditIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\" /><path d=\"m15 5 4 4\" /></svg>\n);\nconst GithubIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35.0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35.0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\" /><path d=\"M9 18c-4.51 2-5-2-7-2\" /></svg>\n);\nconst LinkedinIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\" /><rect width=\"4\" height=\"12\" x=\"2\" y=\"9\" /><circle cx=\"4\" cy=\"4\" r=\"2\" /></svg>\n);\nconst XIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M18 6 6 18\" /><path d=\"m6 6 12 12\" /></svg>\n);\nconst MailIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\" /><path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\" /></svg>\n);\n\n\n\n// --- DockIcon Component ---\n// Renders a single icon that magnifies on mouse proximity.\ninterface DockIconProps {\n  mouseX?: MotionValue<number>; // mouseX is optional as it's injected by the parent Dock.\n  href: string;\n  children: React.ReactNode;\n  onClick?: () => void;\n}\n\nconst DockIcon: React.FC<DockIconProps> = ({ mouseX, href, children, onClick }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const defaultMouseX = useMotionValue(Infinity); // Fallback for when mouseX is not available.\n\n  // Constants for the animation\n  const iconSize = 36;\n  const iconMagnification = 60;\n  const iconDistance = 140;\n\n  const distance = useTransform(mouseX ?? defaultMouseX, (val) => {\n    const bounds = ref.current?.getBoundingClientRect() ?? { x: 0, width: 0 };\n    return val - bounds.x - bounds.width / 2;\n  });\n\n  const widthSync = useTransform(\n    distance,\n    [-iconDistance, 0, iconDistance],\n    [iconSize, iconMagnification, iconSize]\n  );\n\n  const width = useSpring(widthSync, { mass: 0.1, stiffness: 150, damping: 12 });\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (onClick) {\n      e.preventDefault();\n      onClick();\n    }\n  };\n\n  return (\n    <motion.div\n      ref={ref}\n      style={{ width }}\n      className=\"flex aspect-square items-center justify-center rounded-full\"\n    >\n      <a\n        href={href}\n        className=\"flex h-full w-full items-center justify-center\"\n        onClick={handleClick}\n      >\n        {children}\n      </a>\n    </motion.div>\n  );\n};\n\n\n// --- Dock Component ---\n// The main container that tracks the mouse and holds the icons.\ninterface DockProps {\n  children: React.ReactNode;\n}\n\nconst Dock: React.FC<DockProps> = ({ children }) => {\n  const mouseX = useMotionValue(Infinity);\n\n  return (\n    <motion.div\n      onMouseMove={(e) => mouseX.set(e.pageX)}\n      onMouseLeave={() => mouseX.set(Infinity)}\n      className=\"flex h-[58px] items-center gap-2 rounded-2xl bg-white/80 dark:bg-black/50 px-2 border border-black/10 dark:border-white/10 backdrop-blur-lg\"\n    >\n      {React.Children.map(children, (child) => {\n        // FIX: Check if the child is a valid React element and if its type is DockIcon.\n        // This prevents passing the `mouseX` prop to other elements like the separator `div`,\n        // which was causing the React warning.\n        if (React.isValidElement(child) && child.type === DockIcon) {\n          return React.cloneElement(child as React.ReactElement<DockIconProps>, {\n            ...child.props as DockIconProps,\n            mouseX: mouseX,\n          });\n        }\n        return child;\n      })}\n    </motion.div>\n  );\n};\n\n\n// --- Main App Component ---\nconst DockApp: React.FC = () => {\n  const icons = [\n    { name: 'Home', component: HomeIcon, href: '#' },\n    { name: 'Edit', component: EditIcon, href: '#' },\n    { name: 'GitHub', component: GithubIcon, href: '#' },\n    { name: 'LinkedIn', component: LinkedinIcon, href: '#' },\n    { name: 'X', component: XIcon, href: '#' },\n    { name: 'Mail', component: MailIcon, href: '#' },\n  ];\n\n  return (\n    <div className=\"flex flex-col items-center justify-end bg-zinc-50 dark:bg-black font-sans\">\n      <Dock>\n        {icons.map((icon) => (\n          <DockIcon key={icon.name} href={icon.href}>\n            <icon.component className=\"h-full w-full p-2 text-zinc-700 dark:text-zinc-300\" />\n          </DockIcon>\n        ))}\n\n      </Dock>\n    </div>\n  );\n};\n\nexport default DockApp;\n",
      "type": "registry:ui"
    }
  ]
}