{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dock",
  "title": "Dock",
  "description": "A minimalistic dock component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "dock.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useRef } from 'react';\r\nimport {\r\n  motion,\r\n  useMotionValue,\r\n  useSpring,\r\n  useTransform,\r\n  MotionValue\r\n} from \"framer-motion\";\r\nimport { useTheme } from \"next-themes\";\r\n\r\n// --- Utility Function ---\r\n// A simple helper for conditional class names, similar to `clsx`.\r\nconst cn = (...classes: (string | boolean | undefined)[]) => {\r\n  return classes.filter(Boolean).join(' ');\r\n};\r\n\r\n\r\n// --- SVG Icon Components ---\r\n// No changes were made to the icon components. They are included for completeness.\r\nconst HomeIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" /><polyline points=\"9 22 9 12 15 12 15 22\" /></svg>\r\n);\r\nconst EditIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\" /><path d=\"m15 5 4 4\" /></svg>\r\n);\r\nconst GithubIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35.0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35.0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\" /><path d=\"M9 18c-4.51 2-5-2-7-2\" /></svg>\r\n);\r\nconst LinkedinIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\" /><rect width=\"4\" height=\"12\" x=\"2\" y=\"9\" /><circle cx=\"4\" cy=\"4\" r=\"2\" /></svg>\r\n);\r\nconst XIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M18 6 6 18\" /><path d=\"m6 6 12 12\" /></svg>\r\n);\r\nconst MailIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\" /><path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\" /></svg>\r\n);\r\nconst MoonIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\" /></svg>\r\n);\r\nconst SunIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><circle cx=\"12\" cy=\"12\" r=\"4\" /><path d=\"M12 2v2\" /><path d=\"M12 20v2\" /><path d=\"m4.93 4.93 1.41 1.41\" /><path d=\"m17.66 17.66 1.41 1.41\" /><path d=\"M2 12h2\" /><path d=\"M20 12h2\" /><path d=\"m6.34 17.66-1.41 1.41\" /><path d=\"m19.07 4.93-1.41 1.41\" /></svg>\r\n);\r\n\r\n\r\n// --- DockIcon Component ---\r\n// Renders a single icon that magnifies on mouse proximity.\r\ninterface DockIconProps {\r\n  mouseX?: MotionValue<number>; // mouseX is optional as it's injected by the parent Dock.\r\n  href: string;\r\n  children: React.ReactNode;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst DockIcon: React.FC<DockIconProps> = ({ mouseX, href, children, onClick }) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const defaultMouseX = useMotionValue(Infinity); // Fallback for when mouseX is not available.\r\n\r\n  // Constants for the animation\r\n  const iconSize = 36;\r\n  const iconMagnification = 60;\r\n  const iconDistance = 140;\r\n\r\n  const distance = useTransform(mouseX ?? defaultMouseX, (val) => {\r\n    const bounds = ref.current?.getBoundingClientRect() ?? { x: 0, width: 0 };\r\n    return val - bounds.x - bounds.width / 2;\r\n  });\r\n\r\n  const widthSync = useTransform(\r\n    distance,\r\n    [-iconDistance, 0, iconDistance],\r\n    [iconSize, iconMagnification, iconSize]\r\n  );\r\n\r\n  const width = useSpring(widthSync, { mass: 0.1, stiffness: 150, damping: 12 });\r\n\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    if (onClick) {\r\n      e.preventDefault();\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      style={{ width }}\r\n      className=\"flex aspect-square items-center justify-center rounded-full\"\r\n    >\r\n      <a\r\n        href={href}\r\n        className=\"flex h-full w-full items-center justify-center\"\r\n        onClick={handleClick}\r\n      >\r\n        {children}\r\n      </a>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n\r\n// --- Dock Component ---\r\n// The main container that tracks the mouse and holds the icons.\r\ninterface DockProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Dock: React.FC<DockProps> = ({ children }) => {\r\n  const mouseX = useMotionValue(Infinity);\r\n\r\n  return (\r\n    <motion.div\r\n      onMouseMove={(e) => mouseX.set(e.pageX)}\r\n      onMouseLeave={() => mouseX.set(Infinity)}\r\n      className=\"flex h-[58px] items-center gap-2 rounded-2xl bg-white/80 dark:bg-black/50 px-2 border border-black/10 dark:border-white/10 backdrop-blur-lg\"\r\n    >\r\n      {React.Children.map(children, (child) => {\r\n        // FIX: Check if the child is a valid React element and if its type is DockIcon.\r\n        // This prevents passing the `mouseX` prop to other elements like the separator `div`,\r\n        // which was causing the React warning.\r\n        if (React.isValidElement(child) && child.type === DockIcon) {\r\n          return React.cloneElement(child as React.ReactElement<DockIconProps>, {\r\n            ...child.props as DockIconProps,\r\n            mouseX: mouseX,\r\n          });\r\n        }\r\n        return child;\r\n      })}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n\r\n// --- Main App Component ---\r\nconst DockApp: React.FC = () => {\r\n  const { theme, setTheme } = useTheme();\r\n\r\n  const icons = [\r\n    { name: 'Home', component: HomeIcon, href: '#' },\r\n    { name: 'Edit', component: EditIcon, href: '#' },\r\n    { name: 'GitHub', component: GithubIcon, href: '#' },\r\n    { name: 'LinkedIn', component: LinkedinIcon, href: '#' },\r\n    { name: 'X', component: XIcon, href: '#' },\r\n    { name: 'Mail', component: MailIcon, href: '#' },\r\n  ];\r\n\r\n  const isDark = theme === \"dark\";\r\n  const toggleTheme = () => {\r\n    setTheme(isDark ? \"light\" : \"dark\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-end bg-zinc-50 dark:bg-black font-sans\">\r\n      <Dock>\r\n        {icons.map((icon) => (\r\n          <DockIcon key={icon.name} href={icon.href}>\r\n            <icon.component className=\"h-full w-full p-2 text-zinc-700 dark:text-zinc-300\" />\r\n          </DockIcon>\r\n        ))}\r\n        <div className=\"w-px h-full bg-black/10 dark:bg-white/10 mx-2 self-center\" style={{height: '35px'}}></div>\r\n        <DockIcon href=\"#\" onClick={toggleTheme}>\r\n          {isDark ? (\r\n            <SunIcon className=\"h-full w-full p-2 text-zinc-700 dark:text-zinc-300\" />\r\n          ) : (\r\n            <MoonIcon className=\"h-full w-full p-2 text-zinc-700 dark:text-zinc-300\" />\r\n          )}\r\n        </DockIcon>\r\n      </Dock>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DockApp;\r\n",
      "type": "registry:ui"
    }
  ]
}