{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "announcement",
  "title": "announcement",
  "description": "A  announcement component designed with React and Tailwind CSS.",
  "author": "Nazmul Hossain",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "registry/seraui/announcement.tsx",
      "content": "\"use client\";\nimport React, { useCallback } from \"react\";\n\ninterface ArrowUpRightIconProps {\n  className?: string;\n}\n\nconst ArrowUpRightIcon = React.memo(({ className }: ArrowUpRightIconProps) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`h-3.5 w-3.5 ${className}`}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    strokeWidth={2.5}\n    aria-hidden=\"true\"\n    focusable=\"false\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25\"\n    />\n  </svg>\n));\n\ntype AnnouncementVariant =\n  | \"default\"\n  | \"success\"\n  | \"error\"\n  | \"warning\"\n  | \"info\"\n  | \"gradient\";\n\ninterface AnnouncementProps {\n  variant?: AnnouncementVariant;\n  children: React.ReactNode;\n  onClick?: (\n    e: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>\n  ) => void;\n  className?: string;\n  disabled?: boolean;\n}\n\nconst Announcement = React.memo(\n  ({\n    variant = \"default\",\n    children,\n    onClick,\n    className = \"\",\n    disabled = false,\n  }: AnnouncementProps) => {\n    const baseClasses = `\n    inline-flex \n    items-center \n    justify-center \n    space-x-2 \n    font-medium \n    text-sm\n    py-1.5 \n    px-3.5 \n    rounded-full \n    shadow-sm \n    hover:shadow-md \n    active:scale-[0.98]\n    transition-all \n    duration-200 \n    ease-in-out \n    border\n    focus:outline-none\n    focus:ring-2\n    focus:ring-offset-2\n    cursor-pointer\n    ${disabled ? \"opacity-60 cursor-not-allowed\" : \"\"}\n  `;\n\n    // Combined variant classes for both light and dark modes\n    const variantClasses = {\n      default:\n        \"bg-white text-gray-800 border-gray-200 hover:bg-gray-50 focus:ring-blue-500 dark:bg-gray-800 dark:text-gray-200 dark:border-gray-700 dark:hover:bg-gray-700 dark:focus:ring-blue-400 dark:focus:ring-offset-gray-900\",\n      success:\n        \"bg-green-50 text-green-800 border-green-200 hover:bg-green-100 focus:ring-green-500 dark:bg-green-900/30 dark:text-green-200 dark:border-green-800/50 dark:hover:bg-green-900/50 dark:focus:ring-green-400 dark:focus:ring-offset-gray-900\",\n      error:\n        \"bg-red-50 text-red-800 border-red-200 hover:bg-red-100 focus:ring-red-500 dark:bg-red-900/30 dark:text-red-200 dark:border-red-800/50 dark:hover:bg-red-900/50 dark:focus:ring-red-400 dark:focus:ring-offset-gray-900\",\n      warning:\n        \"bg-yellow-50 text-yellow-800 border-yellow-200 hover:bg-yellow-100 focus:ring-yellow-500 dark:bg-yellow-900/30 dark:text-yellow-200 dark:border-yellow-800/50 dark:hover:bg-yellow-900/50 dark:focus:ring-yellow-400 dark:focus:ring-offset-gray-900\",\n      info: \"bg-blue-50 text-blue-800 border-blue-200 hover:bg-blue-100 focus:ring-blue-500 dark:bg-blue-900/30 dark:text-blue-200 dark:border-blue-800/50 dark:hover:bg-blue-900/50 dark:focus:ring-blue-400 dark:focus:ring-offset-gray-900\",\n      gradient:\n        \"bg-gradient-to-r from-cyan-400 to-blue-500 text-white border-0 hover:shadow-lg focus:ring-cyan-300 focus:ring-offset-gray-100 dark:from-cyan-600 dark:to-blue-700 dark:focus:ring-cyan-400 dark:focus:ring-offset-gray-900 dark:hover:shadow-blue-700/50\",\n    };\n\n    // Icon color classes specific to each variant\n    const iconVariantClasses = {\n      default: \"text-gray-600 dark:text-gray-400\",\n      success: \"text-green-600 dark:text-green-400\",\n      error: \"text-red-600 dark:text-red-400\",\n      warning: \"text-yellow-600 dark:text-yellow-400\",\n      info: \"text-blue-600 dark:text-blue-400\",\n      gradient: \"text-white\",\n    };\n\n    // Handle keyboard interactions\n    const handleKeyDown = useCallback(\n      (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (disabled) return;\n\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          onClick?.(e);\n        }\n      },\n      [onClick, disabled]\n    );\n\n    return (\n      <div\n        onClick={disabled ? undefined : onClick}\n        onKeyDown={handleKeyDown}\n        className={`${baseClasses} ${variantClasses[variant]} ${className}`}\n        role={disabled ? \"alert\" : \"button\"}\n        tabIndex={disabled ? -1 : 0}\n        aria-disabled={disabled}\n      >\n        <span>{children}</span>\n        <ArrowUpRightIcon className={iconVariantClasses[variant]} />\n      </div>\n    );\n  }\n);\n\nexport default Announcement;\n",
      "type": "registry:ui",
      "target": "components/seraui/announcement.tsx"
    }
  ]
}
