{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropdown",
  "title": "Dropdown",
  "description": "A minimalistic dropdown component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "dropdown.tsx",
      "content": "\"use client\"\r\nimport React, { useState, useEffect, useRef, ReactNode } from 'react';\r\n\r\n// --- UPDATED SVG ICONS TO MATCH THE NEW IMAGE ---\r\nconst User = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" {...props}><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"/><circle cx=\"12\" cy=\"7\" r=\"4\"/></svg>\r\n);\r\n\r\nconst Community = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" {...props}><path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/></svg>\r\n);\r\n\r\nconst Subscription = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" {...props}><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"/><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"/></svg>\r\n);\r\n\r\nconst Settings = (props: React.SVGProps<SVGSVGElement>) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" {...props}><path d=\"M14 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0\"/><path d=\"M4 6h8\"/><path d=\"M16 6h4\"/><path d=\"M10 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0\"/><path d=\"M4 18h4\"/><path d=\"M12 18h8\"/><path d=\"M10 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0\"/><path d=\"M4 12h4\"/><path d=\"M12 12h8\"/></svg>\r\n);\r\n\r\nconst HelpCenter = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" {...props}><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/><line x1=\"12\" x2=\"12.01\" y1=\"17\" y2=\"17\"/></svg>\r\n);\r\n\r\nconst SignOut = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" {...props}><path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"/><polyline points=\"16 17 21 12 16 7\"/><line x1=\"21\" x2=\"9\" y1=\"12\" y2=\"12\"/></svg>\r\n);\r\n\r\n// --- Dropdown Menu Components ---\r\n\r\ninterface DropdownMenuProps {\r\n    children: ReactNode;\r\n    trigger: ReactNode;\r\n}\r\n\r\nconst DropdownMenu = ({ children, trigger }: DropdownMenuProps) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Close dropdown when clicking outside\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: MouseEvent) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\r\n                setIsOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const handleTriggerClick = (e: React.MouseEvent) => {\r\n        e.stopPropagation();\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative inline-block text-left\" ref={dropdownRef}>\r\n            <div onClick={handleTriggerClick} className=\"cursor-pointer\">\r\n                {trigger}\r\n            </div>\r\n            {isOpen && (\r\n                <div \r\n                    className=\"origin-top-right absolute right-0 mt-2 w-64 rounded-2xl shadow-xl bg-white dark:bg-zinc-900 ring-1 ring-black ring-opacity-5 focus:outline-none z-50 animate-in fade-in-0 zoom-in-95 p-2\"\r\n                    role=\"menu\" \r\n                    aria-orientation=\"vertical\"\r\n                >\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Added `active` prop for styling the highlighted item\r\ninterface DropdownMenuItemProps {\r\n    children: ReactNode;\r\n    onClick?: () => void;\r\n    active?: boolean;\r\n}\r\n\r\nconst DropdownMenuItem = ({ children, onClick, active = false }: DropdownMenuItemProps) => (\r\n    <a\r\n        href=\"#\"\r\n        onClick={(e: React.MouseEvent) => {\r\n            e.preventDefault();\r\n            if(onClick) onClick();\r\n        }}\r\n        className={`\r\n            text-zinc-800 dark:text-zinc-200 font-medium group flex items-center \r\n            px-3 py-2.5 text-sm rounded-lg transition-colors duration-150\r\n            ${active \r\n                ? 'bg-zinc-100 dark:bg-zinc-800' \r\n                : 'hover:bg-zinc-100 dark:hover:bg-zinc-800'\r\n            }\r\n        `}\r\n        role=\"menuitem\"\r\n    >\r\n        {children}\r\n    </a>\r\n);\r\n\r\nconst DropdownMenuSeparator = () => (\r\n    <div className=\"my-2 h-px bg-zinc-200 dark:bg-zinc-700\" />\r\n);\r\n\r\n// --- Main App Component ---\r\n\r\nexport default function Dropdown() {\r\n    return (\r\n        <div className=\" flex items-center justify-center font-sans p-8\">\r\n            <DropdownMenu \r\n                trigger={\r\n                    <button className=\"px-5 py-2 text-sm font-semibold text-zinc-800 dark:text-zinc-100 bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-lg shadow-sm hover:bg-zinc-100 dark:hover:bg-zinc-700 transition-colors\">\r\n                        Open Menu\r\n                    </button>\r\n                }\r\n            >\r\n                <div className=\"flex flex-col space-y-1\">\r\n                    <DropdownMenuItem onClick={() => console.log('Profile clicked')} active={true}>\r\n                        <User className=\"mr-3 h-5 w-5 text-zinc-500\" />\r\n                        <span>Profile</span>\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={() => console.log('Community clicked')}>\r\n                        <Community className=\"mr-3 h-5 w-5 text-zinc-500\" />\r\n                        <span>Community</span>\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={() => console.log('Subscription clicked')}>\r\n                        <Subscription className=\"mr-3 h-5 w-5 text-zinc-500\" />\r\n                        <span>Subscription</span>\r\n                        <span className=\"ml-auto text-xs font-bold text-white bg-gradient-to-r from-pink-500 to-purple-500 rounded-full px-2 py-0.5\">PRO</span>\r\n                    </DropdownMenuItem>\r\n                     <DropdownMenuItem onClick={() => console.log('Settings clicked')}>\r\n                        <Settings className=\"mr-3 h-5 w-5 text-zinc-500\" />\r\n                        <span>Settings</span>\r\n                    </DropdownMenuItem>\r\n                </div>\r\n                <DropdownMenuSeparator />\r\n                 <div className=\"flex flex-col space-y-1\">\r\n                    <DropdownMenuItem onClick={() => console.log('Help Center clicked')}>\r\n                        <HelpCenter className=\"mr-3 h-5 w-5 text-zinc-500\" />\r\n                        <span>Help center</span>\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={() => console.log('Sign Out clicked')}>\r\n                        <SignOut className=\"mr-3 h-5 w-5 text-zinc-500\" />\r\n                        <span>Sign out</span>\r\n                    </DropdownMenuItem>\r\n                </div>\r\n            </DropdownMenu>\r\n        </div>\r\n    );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}